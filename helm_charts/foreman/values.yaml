# Default values for foreman.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

foreman:
  replicaCount: 1 # This must stay one until a couple of things are fixed
  railsenv: production
  image:
    repository: readytalk/foreman-docker
    tag: 1.13.50-4295eb8 
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    internalPort: 80
    externalPort: 80
  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Goes in the settings.yaml for Foreman
  serverName: foreman.domain.com
  domainName: domain.com

  # These paths are based on using puppet as your CA.  I believe these certs are also used for smart proxy communication
  certName: /var/lib/puppet/ssl/certs/cert.pem
  caName: /var/lib/puppet/ssl/ca/ca.pem
  privkeyName: /var/lib/puppet/ssl/private_keys/privkey.pem

puppet:
  enabled: true
  image:
    repository: readytalk/puppetmaster-docker
    tag: 1.13.50-4295eb8 
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    internalPort: 8140
    externalPort: 8140
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: []
  serverName: puppet.domain.com
  domainName: domain.com
  hieraConf: |-
    ---
    :backends:
      - yaml
    :logger: puppet
    :yaml:
      :datadir: /var/lib/puppet/environments/%{::environment}/hieradata
    :hierarchy:
      - "hosts/%{::hostname}"
      - common
  fileserverConf: |-
    [files]
      path /var/lib/puppet/files
    [plugins]
      path /var/lib/puppet/files
  authConf: |- # http://docs.puppetlabs.com/guides/rest_auth_conf.html
    # allow nodes to retrieve their own catalog
    path ~ ^/catalog/([^/]+)$
    method find
    allow $1

    # allow nodes to retrieve their own node definition
    path ~ ^/node/([^/]+)$
    method find
    allow $1

    # allow all nodes to access the certificates services
    path /certificate_revocation_list/ca
    method find
    allow *

    # allow all nodes to store their own reports
    path ~ ^/report/([^/]+)$
    method save
    allow $1
  proxy:
    image:
      repository: readytalk/foremanproxy-docker
      tag: 1.13.50-4295eb8
      pullPolicy: IfNotPresent
    service:
      internalPort: 8000
      externalPort: 8000
    logLevel: DEBUG
    resources: {}

puppetdb:
  image:
    repository: readytalk/puppetdb-docker
    tag: 1.13.50-4295eb8 
    pullPolicy: IfNotPresent
  postgres:
    username: puppetdb
    password: CHANGEME
    dbName: puppetdb
    image:
      repository: postgres
      tag: 9.5-alpine
      pullPolicy: IfNotPresent
  service:
    internalPort: 8080
    internalPortSSL: 8081
    externalPort: 8080
    type: ClusterIP
  caPath: /path/to/ca/cert.pem
  certPath: /path/to/cert.pem
  privkeyPath: /path/to/privkey.pem
  nodeSelector: {}
  tolerations: []
  affinity: {}

postgres:
  enabled: true
  image:
    repository: postgres
    tag: 9.5-alpine
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    internalPort: 5432
    externalPort: 5432
  user: "foreman"
  password: "CHANGEME"
  dbName: "foreman"
  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

utilitypod:
  enabled: true
  image:
    repository: sudermanjr/utilities
    tag: latest

volume:
  class: "efs" # Supports efs or gp2 by default.  efs will create a PersistentVolume attached to Path
  path: "efs.path"
  size: 100Gi

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  path: /
  hosts:
    - foreman.domain.com
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
