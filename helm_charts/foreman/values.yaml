# Default values for foreman.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

foreman:
# You can run muliple instances as all of these requirements are satisfied:
# https://theforeman.org/manuals/1.13/index.html#5.8MultipleForemaninstances
  replicaCount: 5
  railsenv: production
  image:
    repository: readytalk/foreman-docker
    tag: 1.13.80-56ef87e
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    internalPort: 80
    externalPort: 80
    internalPortSSL: 443
    externalPortSSL: 443
    annotations: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

  # Goes in the settings.yaml for Foreman
  serverName: foreman.domain.com
  domainName: domain.com
  encryptionKey: "" # Base64 encoded encryption_key.rb https://theforeman.org/manuals/1.13/index.html#5.2.10PasswordEncryption
  localSecretToken: "" #Similar to above, but another file and another key type

  # These paths are based on using puppet as your CA.  I believe these certs are also used for smart proxy communication
  certName: /var/lib/puppet/ssl/certs/cert.pem
  caName: /var/lib/puppet/ssl/ca/ca.pem
  privkeyName: /var/lib/puppet/ssl/private_keys/privkey.pem

puppet:
  enabled: true
  image:
    repository: readytalk/puppetmaster-docker
    tag:  1.2.111-af4cb0a
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    internalPort: 8140
    externalPort: 8140
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: []
  serverName: puppet.domain.com
  domainName: domain.com
  hieraConf: |-
    ---
    :backends:
      - yaml
    :logger: puppet
    :yaml:
      :datadir: /var/lib/puppet/environments/%{::environment}/hieradata
    :hierarchy:
      - "hosts/%{::hostname}"
      - common
  fileserverConf: |-
    [files]
      path /var/lib/puppet/files
    [plugins]
      path /var/lib/puppet/files
  authConf: |- # http://docs.puppetlabs.com/guides/rest_auth_conf.html
    # allow nodes to retrieve their own catalog
    path ~ ^/catalog/([^/]+)$
    method find
    allow $1

    # allow nodes to retrieve their own node definition
    path ~ ^/node/([^/]+)$
    method find
    allow $1

    # allow all nodes to access the certificates services
    path /certificate_revocation_list/ca
    method find
    allow *

    # allow all nodes to store their own reports
    path ~ ^/report/([^/]+)$
    method save
    allow $1
  proxy:
    service:
      SSL:
        internalPort: 8443
        externalPort: 8443
      nonSSL:
        internalPort: 8000
        externalPort: 8000
    logLevel: INFO

puppetserver:
  webserverConf: |-
    webserver: {
        client-auth = need
        ssl-host = 0.0.0.0
        ssl-port = 8140
    }

puppetdb:
  serverName: puppetdb.domain.com
  serverPort: 443
  image:
    repository: readytalk/puppetdb-docker
    tag: 2.3.8.80-56ef87e
    pullPolicy: IfNotPresent
  postgres:
    username: puppetdb
    password: CHANGEME
    dbName: puppetdb
    image:
      repository: postgres
      tag: 9.5-alpine
      pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    SSL:
      internalPort: 8081
      externalPort: 8081
    nonSSL:
      internalPort: 8080
      externalPort: 8080
    annotations: {}
  caPath: /path/to/ca/cert.pem
  certPath: /path/to/cert.pem
  privkeyPath: /path/to/privkey.pem
  nodeSelector: {}
  tolerations: []
  affinity: {}
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    path: /
    hosts:
      - puppetdb.domain.com
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

postgres:
  enabled: true
  image:
    repository: postgres
    tag: 9.5-alpine
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    internalPort: 5432
    externalPort: 5432
  user: "foreman"
  password: "CHANGEME"
  dbName: "foreman"
  resources: {}
    # limits:
    #  cpu: 100m
    #  memory: 128Mi
    # requests:
    #  cpu: 100m
    #  memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

utilitypod:
  enabled: true
  image:
    repository: sudermanjr/utilities
    tag: latest

volume:
  class: "efs" # Supports efs or gp2 by default.  efs will create a PersistentVolume attached to Path
  path: "efs.path"
  size: 100Gi

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  path: /
  hosts:
    - foreman.domain.com
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

puppetboard:
  image:
    repository: readytalk/puppetboard-docker
    tag: 0.0.5.118-ac563f0
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    internalPort: 9090
    externalPort: 80
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
    path: /
    hosts:
      - puppetboard.domain.com
  settings: |-
    import os
    
    PUPPETDB_HOST = 'localhost'
    PUPPETDB_PORT = 8080
    PUPPETDB_SSL_VERIFY = True
    PUPPETDB_KEY = None
    PUPPETDB_CERT = None
    PUPPETDB_TIMEOUT = 20
    SECRET_KEY = os.urandom(24)
    DEV_LISTEN_HOST = '127.0.0.1'
    DEV_LISTEN_PORT = 5000
    DEV_COFFEE_LOCATION = 'coffee'
    UNRESPONSIVE_HOURS = 2
    ENABLE_QUERY = True
    LOCALISE_TIMESTAMP = True
    LOGLEVEL = 'info'
    REPORTS_COUNT = 10
    OFFLINE_MODE = False
    ENABLE_CATALOG = False
    GRAPH_FACTS = ['architecture',
                   'domain',
                   'lsbcodename',
                   'lsbdistcodename',
                   'lsbdistid',
                   'lsbdistrelease',
                   'lsbmajdistrelease',
                   'netmask',
                   'osfamily',
                   'puppetversion',
                   'processorcount']
    INVENTORY_FACTS = [ ('Hostname',       'fqdn'              ),
                        ('IP Address',     'ipaddress'         ),
                        ('OS',             'lsbdistdescription'),
                        ('Architecture',   'hardwaremodel'     ),
                        ('Kernel Version', 'kernelrelease'     ),
                        ('Puppet Version', 'puppetversion'     ), ]
    
