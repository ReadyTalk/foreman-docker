{{ if .Values.postgres.enabled }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "foreman.fullname" . }}-postgres
  labels:
    app: {{ template "foreman.name" . }}
    chart: {{ template "foreman.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "foreman.name" . }}
      release: {{ .Release.Name }}
      component: postgres
  template:
    metadata:
      labels:
        app: {{ template "foreman.name" . }}
        release: {{ .Release.Name }}
        component: postgres
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          resources:
            request:
              cpu: 100m
              memory: 1024Mi
          ports:
            - name: postgres
              containerPort: {{ .Values.postgres.service.internalPort }}
              protocol: TCP
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready -U {{ .Values.postgres.user }}
            initialDelaySeconds: 5
            timeoutSeconds: 3
            periodSeconds: 5
          env:
            - name: POSTGRES_USER
              value: {{ .Values.postgres.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.password }}
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_DB
              value: {{ .Values.postgres.dbName }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres
          resources:
{{ toYaml .Values.postgres.resources | indent 12 }}
        - name: postgres-prom-exporter
          image: wrouesnel/postgres_exporter:latest
          imagePullPolicy: Always
          ports:
            - name: prometheus
              containerPort: 9187
              protocol: TCP
          env:
            - name: DATA_SOURCE_URI
              value: "localhost:5432/?sslmode=disable"
            - name: DATA_SOURCE_USER
              value: {{ .Values.postgres.user }}
            - name: DATA_SOURCE_PASS
              value: {{ .Values.postgres.password }}
{{- with .Values.postgres.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.postgres.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.postgres.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: postgres
          persistentVolumeClaim:
            claimName: {{ template "foreman.fullname" . }}-postgres
{{- end}}
